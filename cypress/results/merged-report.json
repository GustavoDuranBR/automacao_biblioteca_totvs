{
    "stats": {
        "suites": 1,
        "tests": 2,
        "passes": 1,
        "pending": 0,
        "failures": 1,
        "start": "2024-12-03T19:11:06.128Z",
        "end": "2024-12-03T19:11:14.966Z",
        "duration": 8838,
        "testsRegistered": 2,
        "passPercent": 50,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false
    },
    "results": [
        {
            "uuid": "105f0a56-8310-4aa3-a68c-3eb718dd5937",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\login.feature",
            "file": "cypress\\e2e\\features\\login.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "25713d80-84bb-46d1-b7e0-62c3a80c3f11",
                    "title": "Login",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Acesso com sucesso",
                            "fullTitle": "Login Acesso com sucesso",
                            "timedOut": null,
                            "duration": 3590,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "bf3c2597-77f5-47bb-9fb5-128e8a45c967",
                            "parentUUID": "25713d80-84bb-46d1-b7e0-62c3a80c3f11",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Acesso negado",
                            "fullTitle": "Login Acesso negado",
                            "timedOut": null,
                            "duration": 3061,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {
                                "message": "Error: Mensagem de erro n\u00c3\u00a3o encontrada",
                                "estack": "Error: Mensagem de erro n\u00c3\u00a3o encontrada\n    at Context.eval (cypress/e2e/pages/login_page.js:33:22)",
                                "diff": null
                            },
                            "uuid": "de511b9c-2d00-4d17-8c84-db177ef52e3a",
                            "parentUUID": "25713d80-84bb-46d1-b7e0-62c3a80c3f11",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "bf3c2597-77f5-47bb-9fb5-128e8a45c967"
                    ],
                    "failures": [
                        "de511b9c-2d00-4d17-8c84-db177ef52e3a"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 6651,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "7258cb38-2936-4726-9e02-dfa8a6cebb6d",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\autores.feature",
            "file": "cypress\\e2e\\features\\autores.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "c1db9aa3-5a6d-427c-9bda-6fed6cdc2ddf",
                    "title": "Pagina Autores",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Cadastrar Autor utilizando o menu lateral com sucesso",
                            "fullTitle": "Pagina Autores Cadastrar Autor utilizando o menu lateral com sucesso",
                            "timedOut": null,
                            "duration": 2485,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "b360863a-cc8a-4f92-9cab-eebbc588a503",
                            "parentUUID": "c1db9aa3-5a6d-427c-9bda-6fed6cdc2ddf",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Autor utilizando o menu lateral sem preencher o campo Nacionalidade",
                            "fullTitle": "Pagina Autores Cadastrar Autor utilizando o menu lateral sem preencher o campo Nacionalidade",
                            "timedOut": null,
                            "duration": 992,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "2ffdf3e8-a10e-40d9-a4e9-61f7cc70178a",
                            "parentUUID": "c1db9aa3-5a6d-427c-9bda-6fed6cdc2ddf",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Autor utilizando o menu lateral sem preencher o campo Nome do Autor",
                            "fullTitle": "Pagina Autores Cadastrar Autor utilizando o menu lateral sem preencher o campo Nome do Autor",
                            "timedOut": null,
                            "duration": 947,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "34b2bdf6-2cca-43e4-bd87-f27784a10a7e",
                            "parentUUID": "c1db9aa3-5a6d-427c-9bda-6fed6cdc2ddf",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Autor utilizando o menu lateral sem preencher os campos",
                            "fullTitle": "Pagina Autores Cadastrar Autor utilizando o menu lateral sem preencher os campos",
                            "timedOut": null,
                            "duration": 702,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "4d40e229-f954-442d-8331-281ca93bb08a",
                            "parentUUID": "c1db9aa3-5a6d-427c-9bda-6fed6cdc2ddf",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "b360863a-cc8a-4f92-9cab-eebbc588a503",
                        "2ffdf3e8-a10e-40d9-a4e9-61f7cc70178a",
                        "34b2bdf6-2cca-43e4-bd87-f27784a10a7e",
                        "4d40e229-f954-442d-8331-281ca93bb08a"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 5126,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "35f26c00-964b-421c-b8ca-75a95c68aea4",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\autores_api.feature",
            "file": "cypress\\e2e\\features\\autores_api.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "b5224199-ff73-4286-8e6e-924d9662f6d1",
                    "title": "Testar API de Autores",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Listar todos os autores",
                            "fullTitle": "Testar API de Autores Listar todos os autores",
                            "timedOut": null,
                            "duration": 119,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "459e8dcd-c7fe-45c4-8287-8191d609b9b8",
                            "parentUUID": "b5224199-ff73-4286-8e6e-924d9662f6d1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar um novo autor",
                            "fullTitle": "Testar API de Autores Cadastrar um novo autor",
                            "timedOut": null,
                            "duration": 71,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "0f6a8e15-a354-40e4-a62f-5f81e0866aa4",
                            "parentUUID": "b5224199-ff73-4286-8e6e-924d9662f6d1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Atualizar um autor existente",
                            "fullTitle": "Testar API de Autores Atualizar um autor existente",
                            "timedOut": null,
                            "duration": 118,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "80475f10-5aff-4cb2-bdf2-37d9141dcc27",
                            "parentUUID": "b5224199-ff73-4286-8e6e-924d9662f6d1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Deletar um autor existente",
                            "fullTitle": "Testar API de Autores Deletar um autor existente",
                            "timedOut": null,
                            "duration": 157,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "9c231560-4074-4605-8544-97e1e26ca035",
                            "parentUUID": "b5224199-ff73-4286-8e6e-924d9662f6d1",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "459e8dcd-c7fe-45c4-8287-8191d609b9b8",
                        "0f6a8e15-a354-40e4-a62f-5f81e0866aa4",
                        "80475f10-5aff-4cb2-bdf2-37d9141dcc27",
                        "9c231560-4074-4605-8544-97e1e26ca035"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 465,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "5e3506ac-7076-4477-94ac-abe2578e08e7",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\livros.feature",
            "file": "cypress\\e2e\\features\\livros.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "6daf52e8-41ef-4db2-9dcb-abe395728323",
                    "title": "Pagina Livros",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Cadastrar Livro utilizando o menu lateral com sucesso",
                            "fullTitle": "Pagina Livros Cadastrar Livro utilizando o menu lateral com sucesso",
                            "timedOut": null,
                            "duration": 5525,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "4ec8f5bf-045c-4804-aa35-293eccbe3b0d",
                            "parentUUID": "6daf52e8-41ef-4db2-9dcb-abe395728323",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Livro utilizando o menu lateral sem preencher o campo T\u00c3\u00adtulo",
                            "fullTitle": "Pagina Livros Cadastrar Livro utilizando o menu lateral sem preencher o campo T\u00c3\u00adtulo",
                            "timedOut": null,
                            "duration": 4343,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "e60ddd17-1bcb-4d9c-be51-5e3d4fcdc843",
                            "parentUUID": "6daf52e8-41ef-4db2-9dcb-abe395728323",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Livro utilizando o menu lateral sem preencher o campo Autor",
                            "fullTitle": "Pagina Livros Cadastrar Livro utilizando o menu lateral sem preencher o campo Autor",
                            "timedOut": null,
                            "duration": 4814,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "763c2334-f507-4dda-80d0-5cb2f45391cc",
                            "parentUUID": "6daf52e8-41ef-4db2-9dcb-abe395728323",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Livro utilizando o menu lateral sem preencher o campo Editora",
                            "fullTitle": "Pagina Livros Cadastrar Livro utilizando o menu lateral sem preencher o campo Editora",
                            "timedOut": null,
                            "duration": 5418,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "2a367d61-9fd3-4052-80c2-2ba4e9ad497b",
                            "parentUUID": "6daf52e8-41ef-4db2-9dcb-abe395728323",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "4ec8f5bf-045c-4804-aa35-293eccbe3b0d",
                        "e60ddd17-1bcb-4d9c-be51-5e3d4fcdc843",
                        "763c2334-f507-4dda-80d0-5cb2f45391cc",
                        "2a367d61-9fd3-4052-80c2-2ba4e9ad497b"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 20100,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "9d2f463c-7095-40a9-b1f8-2e6077289c8d",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\edicoes.feature",
            "file": "cypress\\e2e\\features\\edicoes.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "a9d5806d-9bcf-4d9f-8407-ce14a0181abe",
                    "title": "Edicao de Livros e Autores",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Editar o autor cadastrado",
                            "fullTitle": "Edicao de Livros e Autores Editar o autor cadastrado",
                            "timedOut": null,
                            "duration": 2031,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "19ba1564-eef8-4c19-81b9-63aba789220e",
                            "parentUUID": "a9d5806d-9bcf-4d9f-8407-ce14a0181abe",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Editar o Livro cadastrado",
                            "fullTitle": "Edicao de Livros e Autores Editar o Livro cadastrado",
                            "timedOut": null,
                            "duration": 1378,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "911a8e6f-f0ce-484f-87ff-0d50572b33a6",
                            "parentUUID": "a9d5806d-9bcf-4d9f-8407-ce14a0181abe",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "19ba1564-eef8-4c19-81b9-63aba789220e",
                        "911a8e6f-f0ce-484f-87ff-0d50572b33a6"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 3409,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "948452e6-cb06-4a05-b7b0-1309c839374c",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\exclusoes.feature",
            "file": "cypress\\e2e\\features\\exclusoes.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "26aa3992-e4d8-424f-b541-2ae221a0b638",
                    "title": "Exclusao de Livros e Autores",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Excluir o Livro cadastrado",
                            "fullTitle": "Exclusao de Livros e Autores Excluir o Livro cadastrado",
                            "timedOut": null,
                            "duration": 1725,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "81bfe1a4-5289-4ad4-b84c-053ad38767f1",
                            "parentUUID": "26aa3992-e4d8-424f-b541-2ae221a0b638",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Excluir o autor cadastrado",
                            "fullTitle": "Exclusao de Livros e Autores Excluir o autor cadastrado",
                            "timedOut": null,
                            "duration": 559,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "b6c92b58-242a-44a0-bb1e-1c9bc174196c",
                            "parentUUID": "26aa3992-e4d8-424f-b541-2ae221a0b638",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "81bfe1a4-5289-4ad4-b84c-053ad38767f1",
                        "b6c92b58-242a-44a0-bb1e-1c9bc174196c"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2284,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        }
    ],
    "meta": {
        "mocha": {
            "version": "7.0.1"
        },
        "mochawesome": {
            "options": {
                "quiet": false,
                "reportFilename": "mochawesome",
                "saveHtml": false,
                "saveJson": true,
                "consoleReporter": "spec",
                "useInlineDiffs": false,
                "code": true
            },
            "version": "7.1.3"
        },
        "marge": {
            "options": {
                "reportDir": "cypress/results",
                "overwrite": false,
                "html": false,
                "json": true,
                "inline": true
            },
            "version": "6.2.0"
        }
    }
}