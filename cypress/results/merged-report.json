{
    "stats": {
        "suites": 1,
        "tests": 2,
        "passes": 1,
        "pending": 0,
        "failures": 1,
        "start": "2024-12-02T21:12:00.865Z",
        "end": "2024-12-02T21:12:09.672Z",
        "duration": 8807,
        "testsRegistered": 2,
        "passPercent": 50,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false
    },
    "results": [
        {
            "uuid": "e19a4b78-dae6-4846-a355-956024029d32",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\login.feature",
            "file": "cypress\\e2e\\features\\login.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "8e28f001-8cde-4e89-88db-68db2377010e",
                    "title": "Login",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Acesso com sucesso",
                            "fullTitle": "Login Acesso com sucesso",
                            "timedOut": null,
                            "duration": 3499,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "90731bf1-dec6-403a-9a7b-ca8fac974616",
                            "parentUUID": "8e28f001-8cde-4e89-88db-68db2377010e",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Acesso negado",
                            "fullTitle": "Login Acesso negado",
                            "timedOut": null,
                            "duration": 3074,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {
                                "message": "Error: Mensagem de erro n\u00c3\u00a3o encontrada",
                                "estack": "Error: Mensagem de erro n\u00c3\u00a3o encontrada\n    at Context.eval (cypress/e2e/pages/login_page.js:33:22)",
                                "diff": null
                            },
                            "uuid": "b787e700-b5a7-4073-b94b-514ae2ccee01",
                            "parentUUID": "8e28f001-8cde-4e89-88db-68db2377010e",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "90731bf1-dec6-403a-9a7b-ca8fac974616"
                    ],
                    "failures": [
                        "b787e700-b5a7-4073-b94b-514ae2ccee01"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 6573,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "9d325b11-5563-4361-88aa-c0626b2d264b",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\autores.feature",
            "file": "cypress\\e2e\\features\\autores.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "31443d87-9dea-405a-a04a-0ba73526451d",
                    "title": "Pagina Autores",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Cadastrar Autor utilizando o menu lateral com sucesso",
                            "fullTitle": "Pagina Autores Cadastrar Autor utilizando o menu lateral com sucesso",
                            "timedOut": null,
                            "duration": 2069,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "0f188542-2ba3-48da-9ab2-e22bd1684b7b",
                            "parentUUID": "31443d87-9dea-405a-a04a-0ba73526451d",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Autor utilizando o menu lateral sem preencher o campo Nacionalidade",
                            "fullTitle": "Pagina Autores Cadastrar Autor utilizando o menu lateral sem preencher o campo Nacionalidade",
                            "timedOut": null,
                            "duration": 1105,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "a747ed72-dac4-4f5d-be62-e5a5d804cb1f",
                            "parentUUID": "31443d87-9dea-405a-a04a-0ba73526451d",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Autor utilizando o menu lateral sem preencher o campo Nome do Autor",
                            "fullTitle": "Pagina Autores Cadastrar Autor utilizando o menu lateral sem preencher o campo Nome do Autor",
                            "timedOut": null,
                            "duration": 1142,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "3e94f6b6-58f7-4ac1-af85-fab41eaf593d",
                            "parentUUID": "31443d87-9dea-405a-a04a-0ba73526451d",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Autor utilizando o menu lateral sem preencher os campos",
                            "fullTitle": "Pagina Autores Cadastrar Autor utilizando o menu lateral sem preencher os campos",
                            "timedOut": null,
                            "duration": 863,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "62d24c93-984f-4954-881d-5c4f7c7e889d",
                            "parentUUID": "31443d87-9dea-405a-a04a-0ba73526451d",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "0f188542-2ba3-48da-9ab2-e22bd1684b7b",
                        "a747ed72-dac4-4f5d-be62-e5a5d804cb1f",
                        "3e94f6b6-58f7-4ac1-af85-fab41eaf593d",
                        "62d24c93-984f-4954-881d-5c4f7c7e889d"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 5179,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "4e58d925-d815-44a7-b86c-fd4d152a51cb",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\autores_api.feature",
            "file": "cypress\\e2e\\features\\autores_api.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "c509e688-b0b0-4dca-a1fa-48045268bd66",
                    "title": "Testar API de Autores",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Listar todos os autores",
                            "fullTitle": "Testar API de Autores Listar todos os autores",
                            "timedOut": null,
                            "duration": 449,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "214561fd-b87d-4f7b-b4e5-0ff9c16cc0fa",
                            "parentUUID": "c509e688-b0b0-4dca-a1fa-48045268bd66",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar um novo autor",
                            "fullTitle": "Testar API de Autores Cadastrar um novo autor",
                            "timedOut": null,
                            "duration": 73,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "41dc3a5e-2866-4eb5-9620-14c304abc302",
                            "parentUUID": "c509e688-b0b0-4dca-a1fa-48045268bd66",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Atualizar um autor existente",
                            "fullTitle": "Testar API de Autores Atualizar um autor existente",
                            "timedOut": null,
                            "duration": 112,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "10417c98-69fc-4ae7-84f2-6123a8c46180",
                            "parentUUID": "c509e688-b0b0-4dca-a1fa-48045268bd66",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Deletar um autor existente",
                            "fullTitle": "Testar API de Autores Deletar um autor existente",
                            "timedOut": null,
                            "duration": 158,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "7eb01508-f4fc-4816-bc45-8378455ec2c8",
                            "parentUUID": "c509e688-b0b0-4dca-a1fa-48045268bd66",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "214561fd-b87d-4f7b-b4e5-0ff9c16cc0fa",
                        "41dc3a5e-2866-4eb5-9620-14c304abc302",
                        "10417c98-69fc-4ae7-84f2-6123a8c46180",
                        "7eb01508-f4fc-4816-bc45-8378455ec2c8"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 792,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "cfaad6e4-14c4-4239-9ae0-8e1f4fd2a365",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\livros.feature",
            "file": "cypress\\e2e\\features\\livros.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "dc76a50d-81b8-4709-b6f8-a74a3c726b24",
                    "title": "Pagina Livros",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Cadastrar Livro utilizando o menu lateral com sucesso",
                            "fullTitle": "Pagina Livros Cadastrar Livro utilizando o menu lateral com sucesso",
                            "timedOut": null,
                            "duration": 6492,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "d7311224-4e77-4156-bd7b-1e2702a3f307",
                            "parentUUID": "dc76a50d-81b8-4709-b6f8-a74a3c726b24",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Livro utilizando o menu lateral sem preencher o campo T\u00c3\u00adtulo",
                            "fullTitle": "Pagina Livros Cadastrar Livro utilizando o menu lateral sem preencher o campo T\u00c3\u00adtulo",
                            "timedOut": null,
                            "duration": 4459,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "da70ca7b-9dff-4d62-b248-e09247ca3ecb",
                            "parentUUID": "dc76a50d-81b8-4709-b6f8-a74a3c726b24",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Livro utilizando o menu lateral sem preencher o campo Autor",
                            "fullTitle": "Pagina Livros Cadastrar Livro utilizando o menu lateral sem preencher o campo Autor",
                            "timedOut": null,
                            "duration": 5229,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "53a2c2ac-4870-4745-b12b-ddede460dfaa",
                            "parentUUID": "dc76a50d-81b8-4709-b6f8-a74a3c726b24",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Cadastrar Livro utilizando o menu lateral sem preencher o campo Editora",
                            "fullTitle": "Pagina Livros Cadastrar Livro utilizando o menu lateral sem preencher o campo Editora",
                            "timedOut": null,
                            "duration": 5589,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "292006d8-fb70-4a44-9dd4-5310b822e7d9",
                            "parentUUID": "dc76a50d-81b8-4709-b6f8-a74a3c726b24",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "d7311224-4e77-4156-bd7b-1e2702a3f307",
                        "da70ca7b-9dff-4d62-b248-e09247ca3ecb",
                        "53a2c2ac-4870-4745-b12b-ddede460dfaa",
                        "292006d8-fb70-4a44-9dd4-5310b822e7d9"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 21769,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "8883e3a8-85e6-44b0-9737-94cb01952bff",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\edicoes.feature",
            "file": "cypress\\e2e\\features\\edicoes.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "f67ca562-bcab-45c9-afb0-6d37e6e7d9c1",
                    "title": "Edicao de Livros e Autores",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Editar o autor cadastrado",
                            "fullTitle": "Edicao de Livros e Autores Editar o autor cadastrado",
                            "timedOut": null,
                            "duration": 2345,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "8edeb224-0778-4d0e-8ca8-ac37d0ce4d78",
                            "parentUUID": "f67ca562-bcab-45c9-afb0-6d37e6e7d9c1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Editar o Livro cadastrado",
                            "fullTitle": "Edicao de Livros e Autores Editar o Livro cadastrado",
                            "timedOut": null,
                            "duration": 1350,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "3f0b1721-652c-470d-b141-85aeed2890d7",
                            "parentUUID": "f67ca562-bcab-45c9-afb0-6d37e6e7d9c1",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "8edeb224-0778-4d0e-8ca8-ac37d0ce4d78",
                        "3f0b1721-652c-470d-b141-85aeed2890d7"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 3695,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        },
        {
            "uuid": "bd7e86aa-782e-4124-9020-bce1a773f4b2",
            "title": "",
            "fullFile": "cypress\\e2e\\features\\exclusoes.feature",
            "file": "cypress\\e2e\\features\\exclusoes.feature",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "71de9738-4896-4ecc-b5df-bf632df37fb9",
                    "title": "Exclusao de Livros e Autores",
                    "fullFile": "",
                    "file": "",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Excluir o Livro cadastrado",
                            "fullTitle": "Exclusao de Livros e Autores Excluir o Livro cadastrado",
                            "timedOut": null,
                            "duration": 1989,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "3dbd257a-3d3a-4594-abc4-3475a92ae0e2",
                            "parentUUID": "71de9738-4896-4ecc-b5df-bf632df37fb9",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Excluir o autor cadastrado",
                            "fullTitle": "Exclusao de Livros e Autores Excluir o autor cadastrado",
                            "timedOut": null,
                            "duration": 639,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
                            "err": {},
                            "uuid": "960fa1e9-7e0d-47e3-a4f0-e74729b76352",
                            "parentUUID": "71de9738-4896-4ecc-b5df-bf632df37fb9",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "3dbd257a-3d3a-4594-abc4-3475a92ae0e2",
                        "960fa1e9-7e0d-47e3-a4f0-e74729b76352"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2628,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        }
    ],
    "meta": {
        "mocha": {
            "version": "7.0.1"
        },
        "mochawesome": {
            "options": {
                "quiet": false,
                "reportFilename": "mochawesome",
                "saveHtml": true,
                "saveJson": true,
                "consoleReporter": "spec",
                "useInlineDiffs": false,
                "code": true
            },
            "version": "7.1.3"
        },
        "marge": {
            "options": {
                "reportDir": "cypress/results",
                "overwrite": false,
                "html": true,
                "json": true,
                "inline": true
            },
            "version": "6.2.0"
        }
    }
}